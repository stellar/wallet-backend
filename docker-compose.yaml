services:
  db:
    image: postgres:12-alpine
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: wallet-backend
    volumes:
      - postgres-db:/var/lib/postgresql/data
    ports:
      - 5432:5432
  stellar-rpc:
    image: stellar/soroban-rpc
    ports:
      - 8000:8000 
    volumes:
      - ./config:/config 
    environment:
      NETWORK: ${NETWORK}
    entrypoint: ["/bin/bash", "/config/soroban_rpc_startup.sh"]
  api:
    image: stellar/wallet-backend:development
    build:
      context: ./
      platforms:
        - "linux/amd64"
    depends_on:
      db:
        condition: service_started
      soroban-rpc:
        condition: service_started
    ports:
      - 8001:8001
    entrypoint: ""
    command:
      - sh
      - -c
      - |
        ./wallet-backend migrate up
        ./wallet-backend channel-account ensure 5
        ./wallet-backend serve
    environment:
      DATABASE_URL: postgres://postgres@db:5432/wallet-backend?sslmode=disable
      PORT: 8001
      SERVER_BASE_URL: http://localhost:8001
      LOG_LEVEL: TRACE
      WALLET_SIGNING_KEY: ${WALLET_SIGNING_KEY}
      DISTRIBUTION_ACCOUNT_PUBLIC_KEY: ${DISTRIBUTION_ACCOUNT_PUBLIC_KEY}
      DISTRIBUTION_ACCOUNT_SIGNATURE_PROVIDER: ${DISTRIBUTION_ACCOUNT_SIGNATURE_PROVIDER}

      # Env Signature Client
      DISTRIBUTION_ACCOUNT_PRIVATE_KEY: ${DISTRIBUTION_ACCOUNT_PRIVATE_KEY}

      # KMS Signature Client
      KMS_KEY_ARN: ${KMS_KEY_ARN}
      AWS_REGIONG: ${AWS_REGION}
      # Using KMS locally is necessary to inject the AWS credentials envs.
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}

      # Channel Account
      CHANNEL_ACCOUNT_ENCRYPTION_PASSPHRASE: ${CHANNEL_ACCOUNT_ENCRYPTION_PASSPHRASE}
      TRACKER_DSN: ${TRACKER_DSN}
      STELLAR_ENVIRONMENT: ${STELLAR_ENVIRONMENT}
  ingest:
    image: stellar/wallet-backend:development
    depends_on:
      db:
        condition: service_started
      soroban-rpc:
        condition: service_started
    entrypoint: ""
    command:
      - sh
      - -c
      - ./wallet-backend ingest
    environment:
      DATABASE_URL: postgres://postgres@db:5432/wallet-backend?sslmode=disable
      TRACKER_DSN: ${TRACKER_DSN}
      STELLAR_ENVIRONMENT: ${STELLAR_ENVIRONMENT}
volumes:
  postgres-db:
    driver: local
