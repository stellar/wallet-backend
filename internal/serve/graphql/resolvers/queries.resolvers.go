package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"

	"github.com/stellar/wallet-backend/internal/indexer/types"
	graphql1 "github.com/stellar/wallet-backend/internal/serve/graphql/generated"
)

// TransactionByHash is the resolver for the transactionByHash field.
func (r *queryResolver) TransactionByHash(ctx context.Context, hash string) (*types.Transaction, error) {
	transaction, err := r.models.Transactions.GetByHash(ctx, hash)
	if err != nil {
		return nil, err
	}
	return transaction, nil
}

// Transactions is the resolver for the transactions field.
func (r *queryResolver) Transactions(ctx context.Context, limit *int32) ([]*types.Transaction, error) {
	return r.models.Transactions.GetAll(ctx, limit)
}

// Account is the resolver for the account field.
func (r *queryResolver) Account(ctx context.Context, address string) (*types.Account, error) {
	account, err := r.models.Account.Get(ctx, address)
	if err != nil {
		return nil, err
	}
	return account, nil
}

// Query returns graphql1.QueryResolver implementation.
func (r *Resolver) Query() graphql1.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
