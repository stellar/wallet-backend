// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graphql

import (
	"github.com/stellar/wallet-backend/internal/indexer/types"
)

type BuildTransactionInput struct {
	Transaction *TransactionInput `json:"transaction"`
}

type BuildTransactionPayload struct {
	Success        bool   `json:"success"`
	TransactionXdr string `json:"transactionXdr"`
}

type DeregisterAccountInput struct {
	Address string `json:"address"`
}

type DeregisterAccountPayload struct {
	Success bool    `json:"success"`
	Message *string `json:"message,omitempty"`
}

type Mutation struct {
}

type OperationConnection struct {
	Edges    []*OperationEdge `json:"edges,omitempty"`
	PageInfo *PageInfo        `json:"pageInfo"`
}

type OperationEdge struct {
	Node   *types.Operation `json:"node,omitempty"`
	Cursor string           `json:"cursor"`
}

type PageInfo struct {
	StartCursor     *string `json:"startCursor,omitempty"`
	EndCursor       *string `json:"endCursor,omitempty"`
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
}

type Query struct {
}

type RegisterAccountInput struct {
	Address string `json:"address"`
}

type RegisterAccountPayload struct {
	Success bool           `json:"success"`
	Account *types.Account `json:"account,omitempty"`
}

type SimulationResultInput struct {
	TransactionData *string  `json:"transactionData,omitempty"`
	Events          []string `json:"events,omitempty"`
	MinResourceFee  *string  `json:"minResourceFee,omitempty"`
	Results         []string `json:"results,omitempty"`
	LatestLedger    *int32   `json:"latestLedger,omitempty"`
	Error           *string  `json:"error,omitempty"`
}

type TransactionConnection struct {
	Edges    []*TransactionEdge `json:"edges,omitempty"`
	PageInfo *PageInfo          `json:"pageInfo"`
}

type TransactionEdge struct {
	Node   *types.Transaction `json:"node,omitempty"`
	Cursor string             `json:"cursor"`
}

type TransactionInput struct {
	Operations       []string               `json:"operations"`
	Timeout          int32                  `json:"timeout"`
	SimulationResult *SimulationResultInput `json:"simulationResult,omitempty"`
}
