# GraphQL StateChange type - represents changes to blockchain state
# This type has many nullable fields to handle various state change scenarios
type StateChange {
  id: String!
  stateChangeCategory: StateChangeCategory!
  stateChangeReason: StateChangeReason  # Nullable in Go struct
  ingestedAt: Time!
  ledgerCreatedAt: Time!
  ledgerNumber: UInt32!           # Maps to uint32
  
  # GraphQL Nullable fields - these map to sql.NullString in Go
  # GraphQL handles nullable fields gracefully - they return null if not set
  tokenId: String              # Maps to json:"tokenId"
  amount: String
  claimableBalanceId: String   # Maps to json:"claimableBalanceId"
  liquidityPoolId: String      # Maps to json:"liquidityPoolId"
  offerId: String              # Maps to json:"offerId"
  signerAccountId: String      # Maps to json:"signerAccountId"
  spenderAccountId: String     # Maps to json:"spenderAccountId"
  sponsoredAccountId: String   # Maps to json:"sponsoredAccountId"
  sponsorAccountId: String     # Maps to json:"sponsorAccountId"
  
  # GraphQL fields for JSONB data - require custom resolvers
  # These fields need special handling to convert between Go types and GraphQL
  signerWeights: String        # NullableJSONB -> JSON string
  thresholds: String           # NullableJSONB -> JSON string
  flags: [String!]             # NullableJSON -> string array
  keyValue: String             # NullableJSONB -> JSON string
  
  # GraphQL Relationships - these fields use resolvers
  # Account ID this state change belongs to
  accountId: String!           # Maps to json:"accountId"
  
  # Related account - nullable because resolver might not find it
  account: Account
  
  # Operation ID that caused this state change
  operationId: Int64!             # Maps to json:"operationId" -> int64
  
  # Related operation - nullable because resolver might not find it
  operation: Operation
  
  # Transaction hash that contains the operation
  txHash: String!
  
  # Related transaction - nullable because resolver might not find it
  transaction: Transaction
}
